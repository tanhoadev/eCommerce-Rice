// <auto-generated />
using System;
using DoAn.Areas.admin.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAn.Migrations
{
    [DbContext(typeof(KhoGaoDbContext))]
    [Migration("20231102154652_Migration-stringtengao")]
    partial class Migrationstringtengao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoAn.Areas.admin.Models.ChiTietGioHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IDGao")
                        .HasColumnType("int");

                    b.Property<int>("IDGioHang")
                        .HasColumnType("int");

                    b.Property<string>("hinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("khoiLuong")
                        .HasColumnType("int");

                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IDGao");

                    b.HasIndex("IDGioHang");

                    b.ToTable("ChiTietGioHang", (string)null);
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.ChiTietHoaDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IDHoaDon")
                        .HasColumnType("int");

                    b.Property<decimal>("gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("hinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("khoiLuong")
                        .HasColumnType("int");

                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.Property<string>("tenGao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IDHoaDon");

                    b.ToTable("ChiTietHoaDon", (string)null);
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.DanhGia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IDGao")
                        .HasColumnType("int");

                    b.Property<int>("IDTaiKhoan")
                        .HasColumnType("int");

                    b.Property<string>("noiDung")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("soSao")
                        .HasColumnType("int");

                    b.Property<DateTime>("thoiGian")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IDGao");

                    b.HasIndex("IDTaiKhoan");

                    b.ToTable("DanhGia", (string)null);
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.DongGoi", b =>
                {
                    b.Property<int>("IDQuyCach")
                        .HasColumnType("int");

                    b.Property<int>("IDGao")
                        .HasColumnType("int");

                    b.HasKey("IDQuyCach", "IDGao");

                    b.HasIndex("IDGao");

                    b.ToTable("DongGoi", (string)null);
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.Gao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DangBanChay")
                        .HasColumnType("int");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDLoaiGao")
                        .HasColumnType("int");

                    b.Property<int>("conLai")
                        .HasColumnType("int");

                    b.Property<string>("dacTinh")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("giaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("moTa")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("soSao")
                        .HasColumnType("int");

                    b.Property<string>("tenGao")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tinhTrang")
                        .HasColumnType("int");

                    b.Property<string>("xuatXu")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IDLoaiGao");

                    b.ToTable("Gao", (string)null);
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.GioHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IDTaiKhoan")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IDTaiKhoan");

                    b.ToTable("GioHang", (string)null);
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.HoaDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IDKhachHang")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhuongXa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuanHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoNha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhThanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("eMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sDt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IDKhachHang");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.KhachHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnhDaiDien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDTaiKhoan")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hoTen")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ngaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("sDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IDTaiKhoan");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.LoaiGao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("hinhAnh")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenLoaiGao")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiGao", (string)null);
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.NhapHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IDGao")
                        .HasColumnType("int");

                    b.Property<DateTime>("ngayNhap")
                        .HasColumnType("datetime2");

                    b.Property<int>("soLuongNhap")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IDGao");

                    b.ToTable("NhapHang", (string)null);
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.QuyCachDongGoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("khoiLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("QuyCachDongGoi", (string)null);
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.TaiKhoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("loaiTaiKhoan")
                        .HasColumnType("int");

                    b.Property<string>("matKhau")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("taiKhoan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TaiKhoan", (string)null);
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.ChiTietGioHang", b =>
                {
                    b.HasOne("DoAn.Areas.admin.Models.Gao", "gao")
                        .WithMany("chiTietGioHangs")
                        .HasForeignKey("IDGao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietGioHang_Gao");

                    b.HasOne("DoAn.Areas.admin.Models.GioHang", "gioHang")
                        .WithMany("chiTietGioHangs")
                        .HasForeignKey("IDGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietGioHang_GioHang");

                    b.Navigation("gao");

                    b.Navigation("gioHang");
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.ChiTietHoaDon", b =>
                {
                    b.HasOne("DoAn.Areas.admin.Models.HoaDon", "hoaDon")
                        .WithMany("chiTietHoaDons")
                        .HasForeignKey("IDHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietHoaDon_HoaDon");

                    b.Navigation("hoaDon");
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.DanhGia", b =>
                {
                    b.HasOne("DoAn.Areas.admin.Models.Gao", "gao")
                        .WithMany("danhGias")
                        .HasForeignKey("IDGao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DanhGia_Gao");

                    b.HasOne("DoAn.Areas.admin.Models.TaiKhoan", "taiKhoan")
                        .WithMany("danhGias")
                        .HasForeignKey("IDTaiKhoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DanhGia_TaiKhoan");

                    b.Navigation("gao");

                    b.Navigation("taiKhoan");
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.DongGoi", b =>
                {
                    b.HasOne("DoAn.Areas.admin.Models.Gao", "gao")
                        .WithMany("dongGois")
                        .HasForeignKey("IDGao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DongGoi_Gao");

                    b.HasOne("DoAn.Areas.admin.Models.QuyCachDongGoi", "quyCachDongGoi")
                        .WithMany("dongGois")
                        .HasForeignKey("IDQuyCach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DongGoi_QuyCach");

                    b.Navigation("gao");

                    b.Navigation("quyCachDongGoi");
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.Gao", b =>
                {
                    b.HasOne("DoAn.Areas.admin.Models.LoaiGao", "loaiGao")
                        .WithMany("gaos")
                        .HasForeignKey("IDLoaiGao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Gao_LoaiGao");

                    b.Navigation("loaiGao");
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.GioHang", b =>
                {
                    b.HasOne("DoAn.Areas.admin.Models.TaiKhoan", "taiKhoan")
                        .WithMany("gioHangs")
                        .HasForeignKey("IDTaiKhoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_GioHang_TaiKhoan");

                    b.Navigation("taiKhoan");
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.HoaDon", b =>
                {
                    b.HasOne("DoAn.Areas.admin.Models.KhachHang", "khachHang")
                        .WithMany("hoaDons")
                        .HasForeignKey("IDKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HoaDon_KhachHang");

                    b.Navigation("khachHang");
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.KhachHang", b =>
                {
                    b.HasOne("DoAn.Areas.admin.Models.TaiKhoan", "taiKhoan")
                        .WithMany("khachHangs")
                        .HasForeignKey("IDTaiKhoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_KhachHang_TaiKhoan");

                    b.Navigation("taiKhoan");
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.NhapHang", b =>
                {
                    b.HasOne("DoAn.Areas.admin.Models.Gao", "gao")
                        .WithMany("nhapHangs")
                        .HasForeignKey("IDGao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_NhapHang_Gao");

                    b.Navigation("gao");
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.Gao", b =>
                {
                    b.Navigation("chiTietGioHangs");

                    b.Navigation("danhGias");

                    b.Navigation("dongGois");

                    b.Navigation("nhapHangs");
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.GioHang", b =>
                {
                    b.Navigation("chiTietGioHangs");
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.HoaDon", b =>
                {
                    b.Navigation("chiTietHoaDons");
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.KhachHang", b =>
                {
                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.LoaiGao", b =>
                {
                    b.Navigation("gaos");
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.QuyCachDongGoi", b =>
                {
                    b.Navigation("dongGois");
                });

            modelBuilder.Entity("DoAn.Areas.admin.Models.TaiKhoan", b =>
                {
                    b.Navigation("danhGias");

                    b.Navigation("gioHangs");

                    b.Navigation("khachHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
